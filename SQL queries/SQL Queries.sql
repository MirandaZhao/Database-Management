-- Homework- Database Management
-- Professor Tremblay
-- Miranda Yuchen Zhao
-- 10 October,2018

-- Query 1
use learningsql;
select count(*)
from employee;

-- Query 2
SELECT FIRST_NAME,LAST_NAME,TITLE,START_DATE
FROM employee;

-- Query 3
-- #select title from employee;
SELECT FIRST_NAME,LAST_NAME
From employee
Where TITLE='Teller'
order by START_DATE; 

-- Query 4
-- select * from branch;
-- select * from employee;

select count(EMP_ID)
from employee, branch 
where NAME = 'Headquarters'
and ASSIGNED_BRANCH_ID=BRANCH_ID;

-- Query 5
select FIRST_NAME, LAST_NAME, TITLE
from employee, branch 
where NAME = 'Headquarters'
and ASSIGNED_BRANCH_ID=BRANCH_ID;

-- Query 6
-- select * from branch;
-- select * from employee;

select B.NAME, count(EMP_ID)
From branch B, employee E
WHERE E.ASSIGNED_BRANCH_ID = B.BRANCH_ID
GROUP BY B.NAME;


-- Query 7
-- select * from product;
-- SELECT count(DISTINCT PRODUCT_TYPE_CD)
-- FROM PRODUCT;
SELECT DISTINCT PRODUCT_TYPE_CD
FROM PRODUCT;

-- Query 8
select NAME from product
where NAME like '%account%';

-- Query 9
select FIRST_NAME,LAST_NAME,BIRTH_DATE
from individual
order by BIRTH_DATE; 
 
-- Query 10
-- select * from account;
select avg(AVAIL_BALANCE), max(AVAIL_BALANCE),min(AVAIL_BALANCE)
from account;

-- Query 11
SELECT P.NAME, AVG(AVAIL_BALANCE), MIN(AVAIL_BALANCE), MAX(AVAIL_BALANCE)
FROM ACCOUNT, PRODUCT P
WHERE ACCOUNT.PRODUCT_CD = P.PRODUCT_CD
GROUP BY P.PRODUCT_CD;

-- Query 12
SELECT A.CUST_ID, COUNT(A.ACCOUNT_ID) 
FROM  ACCOUNT A
WHERE A.AVAIL_BALANCE > 1000 
GROUP BY A.CUST_ID;

-- Query 13
SELECT A.CUST_ID, COUNT(A.ACCOUNT_ID) , AVG(A.AVAIL_BALANCE)
FROM ACCOUNT A
WHERE A.AVAIL_BALANCE > 1000 
GROUP BY A.CUST_ID;

-- Query 14
SELECT C.CUST_ID, COUNT(A.ACCOUNT_ID), AVG(AVAIL_BALANCE)
FROM CUSTOMER C, ACCOUNT A
WHERE A.CUST_ID = C.CUST_ID
GROUP BY C.CUST_ID
HAVING AVG(AVAIL_BALANCE)>1000;

-- Query 15
SELECT OPEN_BRANCH_ID, PRODUCT_CD, MAX(PENDING_BALANCE)
FROM ACCOUNT A
GROUP BY OPEN_BRANCH_ID, PRODUCT_CD
HAVING MAX(PENDING_BALANCE)>2000;

-- Query 16
SELECT B.NAME, P.NAME, MAX(PENDING_BALANCE)
FROM ACCOUNT A, PRODUCT P,BRANCH B
WHERE A.OPEN_BRANCH_ID = B.BRANCH_ID
AND P.PRODUCT_CD = A.PRODUCT_CD
GROUP BY B.NAME, P.NAME
HAVING MAX(PENDING_BALANCE)>2000;

-- Query 17
SELECT A.ACCOUNT_ID, A.CUST_ID, A.PRODUCT_CD, A.OPEN_BRANCH_ID
FROM ACCOUNT A
WHERE AVAIL_BALANCE < (select AVG(AVAIL_BALANCE) from ACCOUNT);

-- Query 18
SELECT A.ACCOUNT_ID, I.LAST_NAME, I.FIRST_NAME, P.NAME, B.NAME AS 'OPENING BRANCH NAME'
FROM ACCOUNT A, PRODUCT P, INDIVIDUAL I, BRANCH B
WHERE AVAIL_BALANCE < (select AVG(AVAIL_BALANCE) from ACCOUNT)
AND I.CUST_ID = A.CUST_ID
AND B.BRANCH_ID = A.OPEN_BRANCH_ID
AND P.PRODUCT_CD = A.PRODUCT_CD
ORDER BY I.LAST_NAME;

-- Query 19
SELECT I.LAST_NAME, I.FIRST_NAME
FROM  INDIVIDUAL I, ACCOUNT
WHERE ACCOUNT_ID IN (SELECT ACCOUNT_ID 
					 FROM ACCOUNT 
                     GROUP BY CUST_ID 
					 HAVING SUM(ACCOUNT_ID)>2) 
AND ACCOUNT.CUST_ID = I.CUST_ID;

-- Query 20
SELECT E.LAST_NAME, E.FIRST_NAME, year(curdate())-year(E.START_DATE) AS 'YEARS WITH COMPANY', S.LAST_NAME AS 'SUPERVISOR LAST NAME'
FROM EMPLOYEE E, EMPLOYEE S
WHERE S.EMP_ID = E.SUPERIOR_EMP_ID
ORDER BY S.LAST_NAME;

-- Query 21
SELECT S.LAST_NAME, count(E.SUPERIOR_EMP_ID)
FROM EMPLOYEE E, EMPLOYEE S
WHERE S.EMP_ID = E.SUPERIOR_EMP_ID
GROUP BY S.EMP_ID;

-- Query 22
SELECT *
FROM ACCOUNT 
WHERE STATUS = 'Active';

-- Query 23
SELECT *
FROM ACCOUNT A
WHERE NOT EXISTS (SELECT * FROM acc_transaction AT 
				  WHERE A.ACCOUNT_ID = AT.ACCOUNT_ID);

-- Query 24


-- Query 25
SELECT PRODUCT_CD, AVG(AVAIL_BALANCE), MIN(AVAIL_BALANCE), MAX(AVAIL_BALANCE)
FROM account
WHERE ACCOUNT.STATUS = 'Active' 
AND PRODUCT_CD = 'CD' or PRODUCT_CD = 'CHK' or PRODUCT_CD = 'MM' or PRODUCT_CD = 'SAV'
Group by PRODUCT_CD;




